name: CI

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main
      - '**'

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify pnpm
        run: pnpm --version

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm -w test

  web-smoke:
    name: web-smoke
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify pnpm
        run: pnpm --version

      - name: Install
        run: pnpm install --frozen-lockfile

      # Measure from BEFORE build through boot and smoke
      - name: Measure build+boot+smoke and save timing artifact
        if: always()
        shell: bash
        env:
          BASE_URL: http://localhost:3001
        run: |
          START_TS=$(date +%s)
          set +e

          echo "--- BUILD @iberitax/web ---"
          pnpm --filter @iberitax/web build
          BUILD_CODE=$?

          echo "--- START SERVER :3001 ---"
          nohup pnpm --filter @iberitax/web exec next start -p 3001 > server.log 2>&1 &
          echo $! > server.pid

          echo "--- WAIT FOR SERVER ---"
          for i in {1..90}; do
            if curl -fsS http://localhost:3001/ >/dev/null; then
              echo "Server is up"
              break
            fi
            sleep 1
          done

          echo "--- RUN SMOKE SCRIPT ---"
          chmod +x apps/web/tools/smoke.portable.sh
          bash apps/web/tools/smoke.portable.sh
          SMOKE_CODE=$?

          echo "--- STOP SERVER ---"
          if [ -f server.pid ]; then kill $(cat server.pid) 2>/dev/null || true; fi
          pkill -f "next start" 2>/dev/null || true

          END_TS=$(date +%s)
          TOTAL=$((END_TS - START_TS))
          mkdir -p "artifacts/${{ github.run_id }}"
          echo "$TOTAL" > "artifacts/${{ github.run_id }}/web_smoke_total_seconds.txt"
          printf "web-smoke total seconds: %s\n" "$TOTAL" >> "$GITHUB_STEP_SUMMARY"

          # Always succeed for baseline capture; surface failures as warnings
          if [ $BUILD_CODE -ne 0 ] || [ $SMOKE_CODE -ne 0 ]; then
            echo "::warning::web-smoke nonzero exits â€” build=$BUILD_CODE smoke=$SMOKE_CODE"
          fi
          exit 0

      - name: Upload timing artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-smoke-timing-${{ github.run_id }}
          path: artifacts/${{ github.run_id }}/web_smoke_total_seconds.txt
          if-no-files-found: error

