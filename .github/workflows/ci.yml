name: CI

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main
      - '**'

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify pnpm
        run: pnpm --version

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm -w test

  web-smoke:
    name: web-smoke
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify pnpm
        run: pnpm --version

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build web
        run: pnpm --filter @iberitax/web build

      - name: Start Next server (port 3001)
        run: |
          nohup pnpm --filter @iberitax/web exec next start -p 3001 > server.log 2>&1 &
          echo $! > server.pid

      - name: Wait for server to be ready
        shell: bash
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:3001/ >/dev/null; then
              echo "Server is up"
              exit 0
            fi
            sleep 1
          done
          echo "Server did not become ready in time" >&2
          exit 1

      - name: Run smoke and save timing artifact
        if: always()
        shell: bash
        env:
          BASE_URL: http://localhost:3001
        run: |
          START_TS=$(date +%s)
          set +e
          chmod +x apps/web/tools/smoke.portable.sh
          bash apps/web/tools/smoke.portable.sh
          EXIT_CODE=$?
          END_TS=$(date +%s)
          TOTAL=$((END_TS - START_TS))
          mkdir -p "artifacts/${{ github.run_id }}"
          echo "$TOTAL" > "artifacts/${{ github.run_id }}/web_smoke_total_seconds.txt"
          printf "web-smoke total seconds: %s\n" "$TOTAL" >> "$GITHUB_STEP_SUMMARY"
          exit $EXIT_CODE

      - name: Upload timing artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-smoke-timing-${{ github.run_id }}
          path: artifacts/${{ github.run_id }}/web_smoke_total_seconds.txt
          if-no-files-found: error

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi
          sleep 1
          pkill -f "next start" || true

