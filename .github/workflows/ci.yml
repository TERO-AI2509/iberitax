name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  NODE_VERSION: '20'

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Enable Corepack
        run: corepack enable

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: pnpm -w test

  web-smoke:
    name: web-smoke
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Enable Corepack
        run: corepack enable

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build web
        run: pnpm --filter @iberitax/web build

      - name: Start Next server (background)
        shell: bash
        run: |
          set -eu
          export PORT=3001
          nohup pnpm --filter @iberitax/web start > artifacts/server.log 2>&1 &
          echo $! > .server.pid

      - name: Wait for server
        shell: bash
        run: |
          set -eu
          for i in $(seq 1 60); do
            if curl -sfS "http://localhost:3001" >/dev/null; then
              exit 0
            fi
            sleep 1
          done
          echo "Server did not become ready in time"
          exit 1

      - name: Run smoke
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p artifacts
          if [ -x apps/web/tools/smoke.portable.sh ]; then
            apps/web/tools/smoke.portable.sh | tee artifacts/smoke.log
          elif [ -x scripts/smoke-auth.sh ]; then
            scripts/smoke-auth.sh | tee artifacts/smoke.log
          else
            echo "No smoke script found" | tee artifacts/smoke.log
            exit 1
          fi

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-smoke-${{ github.run_id }}
          path: |
            artifacts/smoke.log
            artifacts/server.log

      - name: Stop Next server
        if: always()
        run: |
          if [ -f .server.pid ]; then
            kill "$(cat .server.pid)" 2>/dev/null || true
          fi

