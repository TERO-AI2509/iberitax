name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Restore pnpm store cache
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpmstore-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpmstore-

      - name: Report pnpm cache status
        run: echo "pnpm_cache_hit=${{ steps.restore-cache.outputs['cache-hit'] }}"

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm -w test

  web-smoke:
    name: web-smoke
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Restore pnpm store cache
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpmstore-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpmstore-

      - name: Report pnpm cache status
        run: echo "pnpm_cache_hit=${{ steps.restore-cache.outputs['cache-hit'] }}"

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: pnpm -w --filter @iberitax/web build

      - name: Start web app
        run: |
          PORT=3001 pnpm -w --filter @iberitax/web start > server.log 2>&1 & echo $! > .app-pid
          for i in $(seq 1 60); do
            curl -fsS "http://localhost:3001/login" >/dev/null && break
            sleep 1
          done

      - name: Run smoke
        env:
          BASE_URL: http://localhost:3001
          LOG: smoke.log
        run: bash apps/web/tools/smoke.portable.sh | tee -a smoke.log

      - name: Append server.log tail to summary on failure
        if: failure()
        run: |
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          tail -n 200 server.log >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: Ensure artifact files exist
        if: always()
        run: |
          : > smoke.log
          : > server.log

      - name: Upload smoke.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke.log
          path: smoke.log
          retention-days: 7

      - name: Upload server.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server.log
          path: server.log
          retention-days: 7

      - name: Stop web app
        if: always()
        run: |
          if [ -f .app-pid ]; then kill "$(cat .app-pid)" || true; fi
