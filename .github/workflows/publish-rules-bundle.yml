name: Publish Rules Dashboard Bundle

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      stamp: ${{ steps.stamp.outputs.stamp }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Prebuild rules dashboard
        env:
          ENABLE_RULES_DASHBOARD: '1'
          ENABLE_RULE_INSIGHTS_HTML: '1'
        run: |
          mkdir -p artifacts/modelo100
          [ -f artifacts/modelo100/rules.index.md ] || cat > artifacts/modelo100/rules.index.md <<'MD'
          | id | tags | message | severity |
          |----|------|---------|----------|
          MD
          node scripts/modelo100.rules.index.mjs || true
          node scripts/modelo100.rules.index.html.mjs || true
          node scripts/modelo100.rules.insights.html.mjs || true
          node scripts/modelo100.rules.dashboard.html.mjs || true

      - name: Build publish bundle
        env:
          ENABLE_RULES_PUBLISH: '1'
        run: |
          node -v
          node scripts/modelo100.rules.publish.mjs
          test -f artifacts/modelo100/rules-dashboard-bundle.zip
          echo "::notice title=Bundle Found::artifacts/modelo100/rules-dashboard-bundle.zip"

      - name: Compute build stamp
        id: stamp
        run: |
          TS=$(date -u +%Y%m%dT%H%M%SZ)
          SHA=$(git rev-parse --short HEAD)
          REF="${GITHUB_REF_NAME}"
          echo "stamp=${TS}-${SHA}" >> "$GITHUB_OUTPUT"
          echo "refname=${REF}" >> "$GITHUB_OUTPUT"
          echo "::notice title=Build Stamp::${TS}-${SHA}"

      - name: Prepare release files
        run: |
          mkdir -p artifacts/release
          cp artifacts/modelo100/rules-dashboard-bundle.zip "artifacts/release/rules-dashboard-bundle-${{ steps.stamp.outputs.stamp }}.zip"
          sed -e "s/{{TAG}}/${{ steps.stamp.outputs.refname }}/g" -e "s/{{STAMP}}/${{ steps.stamp.outputs.stamp }}/g" docs/publish-notes.md > artifacts/release/release-notes.md
          ls -l artifacts/release

      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: rules-dashboard-bundle-${{ steps.stamp.outputs.stamp }}
          path: artifacts/release/*

      - name: Create GitHub Release (tag pushes)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh --version
          gh release create "${{ steps.stamp.outputs.refname }}" \
            "artifacts/release/rules-dashboard-bundle-${{ steps.stamp.outputs.stamp }}.zip" \
            --title "Rules Dashboard ${{ steps.stamp.outputs.refname }}" \
            --notes-file artifacts/release/release-notes.md

  pages:
    if: ${{ always() && needs.publish.result == 'success' }}
    needs: publish
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: rules-dashboard-bundle-${{ needs.publish.outputs.stamp }}
          path: site

      - name: Unzip site
        run: |
          mkdir -p _site
          unzip -q "site/rules-dashboard-bundle-*.zip" -d _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
